{"version":3,"sources":["components/InputForm.js","components/HeaderBar.js","components/ListLayout.js","App.js","serviceWorker.js","index.js"],"names":["styles","edit","width","background","size","add","root","minHeight","minWidth","padding","InputForm","state","errorState","validateItem","e","props","addItem","setState","newItem","this","handleInput","updateItem","Grid","container","justify","alignContent","item","xs","md","Typography","component","style","borderColor","Card","variant","color","fontFamily","margin","onSubmit","autoComplete","TextField","id","label","marginTop","placeholder","InputLabelProps","shrink","error","helperText","value","onChange","CardActions","Button","type","fontsize","startIcon","Component","HeaderBar","AppBar","position","Toolbar","direction","useStyles","makeStyles","theme","demo","backgroundColor","palette","paper","title","spacing","ToDoList","classes","React","useState","dense","clearList","items","deleteItem","handleClick","className","gutterBottom","List","map","x","ListItem","key","button","textDecoration","isStriked","onClick","divider","ListItemText","primary","itemText","ListItemSecondaryAction","IconButton","edge","aria-label","App","Math","random","target","preventDefault","typedItem","typedItems","selectedItem","filter","ItemToBeEdittedId","find","bind","ListLayout","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.3ddec9ca.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport { useTheme } from \"@material-ui/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nimport FormatListBulletedIcon from \"@material-ui/icons/FormatListBulleted\";\r\n\r\n\r\nconst styles = {\r\n    edit: {\r\n\r\n        width:'100%',\r\n\r\n\r\n\r\n        background:'#76ff03',\r\n        size:'large'\r\n\r\n    },\r\n    add:{\r\n\r\n        width:'100%',\r\n\r\n        background:'#18ffff',\r\n        size:'large'\r\n\r\n    },\r\n    root: {\r\n        minHeight: 210,\r\n        minWidth:300,\r\n        padding: 10\r\n\r\n\r\n    },\r\n\r\n};\r\n\r\n\r\n\r\n\r\nclass InputForm extends Component {\r\n\r\n    state = {\r\n        errorState: false\r\n    };\r\n\r\n    validateItem = e => {\r\n        this.props.addItem(e);\r\n        this.setState({\r\n            errorState: this.props.newItem ? false : true\r\n        });\r\n    };\r\n\r\n\r\n    render() {\r\n        const { newItem,handleInput,updateItem} =this.props;\r\n\r\n\r\n        const buttonChange = () =>{\r\n          if(!updateItem){\r\n                return(\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color='inherit'\r\n                        fontsize='inherit'\r\n                        style={styles.add}\r\n                        startIcon={<AddIcon/>}\r\n\r\n                    >\r\n                        Add Item\r\n                    </Button>\r\n\r\n                )\r\n            }else{\r\n                return (\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color='inherit'\r\n                        style={styles.edit}\r\n                        fontsize='inherit'\r\n                        startIcon={<EditIcon/>}\r\n\r\n                    >\r\n                        Edit Item\r\n                    </Button>\r\n                )\r\n          }\r\n        };\r\n\r\n        return (\r\n                <div>\r\n                    <Grid container  justify='center' alignContent='center'  >\r\n                        <Grid item xs={12} md={6}  >\r\n                        {/*marginTop:15*/}\r\n                        <Typography component=\"div\" style={{  borderColor:'#00c853' }}>\r\n                            {/*style={{  height: '30vh' }}*/}\r\n                            <Card   style={styles.root}>\r\n\r\n                            <Typography variant=\"overline\"  color=\"secondary\"   style={{fontFamily:'Roboto',margin:10}}>\r\n                               All about your needs\r\n                            </Typography>\r\n                                <form onSubmit={this.validateItem} autoComplete='off' >\r\n\r\n\r\n                                    <Grid container  justify='center' alignContent='center'  >\r\n                                        <Grid item xs={12}   >\r\n\r\n                                            <TextField\r\n\r\n                                                id=\"outlined-full-width\"\r\n                                                label=\"Input\"\r\n                                                style={{  width:'100%',marginTop:30 }}\r\n                                                placeholder=\"Add A Todo Item \"\r\n\r\n                                                margin=\"normal\"\r\n\r\n                                                InputLabelProps={{\r\n                                                    shrink: true,\r\n                                                }}\r\n                                                error={this.state.errorState}\r\n                                                helperText={\r\n                                                    this.state.errorState && \"Item name can't be blank\"\r\n                                                }\r\n                                                size=\"large\"\r\n                                                variant=\"outlined\"\r\n                                                value={newItem}\r\n                                                onChange={handleInput}\r\n\r\n\r\n\r\n\r\n\r\n                                            />\r\n\r\n                                        </Grid>\r\n\r\n                                    </Grid>\r\n                                    <CardActions>\r\n                                    <Grid container  justify='center' alignContent='center'  >\r\n                                        <Grid item xs={12} md={6}  >\r\n\r\n                                        {buttonChange()}\r\n\r\n\r\n                                        </Grid>\r\n\r\n                                    </Grid>\r\n\r\n                                    </CardActions>\r\n\r\n\r\n\r\n\r\n                                </form>\r\n\r\n                            </Card>\r\n\r\n\r\n                        </Typography>\r\n\r\n\r\n                         </Grid>\r\n\r\n                    </Grid>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InputForm;","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\n\r\n// const useStyles = makeStyles(theme => ({\r\n//     title: {\r\n//         flexGrow: 1,\r\n//         textAlign: 'center',\r\n//     },\r\n// }));\r\n\r\nconst HeaderBar = () =>{\r\n    //const classes = useStyles();\r\n        return(\r\n            <div>\r\n               <AppBar  position='static' style={{ background: '#263238' }}>\r\n                   <Toolbar>\r\n                       <Grid container direction=\"row\" justify=\"center\">\r\n                           <Grid item>\r\n                               <FormatListBulletedIcon  />\r\n                           </Grid>\r\n                               <Grid item>\r\n                                   <Typography variant=\"title\"   >\r\n                                       To Do Application\r\n                                   </Typography >\r\n\r\n                               </Grid>\r\n                           </Grid>\r\n\r\n\r\n                   </Toolbar>\r\n               </AppBar>\r\n            </div>\r\n        )\r\n};\r\n\r\n\r\n\r\nexport default HeaderBar;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport ClearAllIcon from '@material-ui/icons/ClearAll';\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n\r\n    demo: {\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    title: {\r\n        margin: theme.spacing(4, 0, 2),\r\n    },\r\n    root: {\r\n        minHeight: 170,\r\n    },\r\n\r\n\r\n}));\r\n\r\n\r\nconst ToDoList = (props) =>{\r\n    const classes = useStyles();\r\n    const [dense ] = React.useState(false);\r\n\r\n    const clearList = props.clearList;\r\n    const items = props.items;\r\n    const deleteItem = props.deleteItem;\r\n    const updateItem = props.updateItem;\r\n    const handleClick = props.handleClick;\r\n\r\n    const listItems = item =>{\r\n        return <div key={item.id}>{item.itemText}</div>\r\n    };\r\n\r\n\r\n    // const completed = (id) => {\r\n    //     document.getElementById(id).style.textDecoration = 'line-through';\r\n    //     return true;\r\n    // };\r\n\r\n    const strikeTextMethod = id => {\r\n        handleClick(id);\r\n    };\r\n\r\n    return(\r\n        <div >\r\n\r\n\r\n            <Grid container  justify='center' alignContent='center'  >\r\n                <Grid item xs={12} md={6}  >\r\n                    <Typography variant=\"h5\" className={classes.title} gutterBottom>\r\n                        To do List  <Typography variant='caption' >\r\n                         Click on an Item to Complete\r\n                    </Typography>\r\n                    </Typography>\r\n\r\n                    <div className={classes.demo}>\r\n                        <List dense={dense} >\r\n\r\n                            {items.map(x=> (\r\n                                <ListItem key={x.id} button id={x.id}\r\n                                          style={{\r\n                                              textDecoration: x.isStriked ? \"line-through\" : \"initial\"\r\n                                          }}\r\n\r\n                                          onClick={() => strikeTextMethod(x.id)} divider>\r\n\r\n                                    <ListItemText\r\n                                        primary={listItems(x)}\r\n\r\n                                    />\r\n                                    <ListItemSecondaryAction>\r\n\r\n                                        <IconButton onClick={() =>updateItem(x.id)}\r\n                                                    edge=\"end\"\r\n                                                    aria-label=\"edit\"\r\n                                                    style={{color:'#76ff03'}}>\r\n                                            <EditIcon />\r\n                                        </IconButton>\r\n                                        <IconButton onClick={() =>deleteItem(x.id)}\r\n                                                    edge=\"end\"\r\n                                                    aria-label=\"delete\"\r\n                                                    style={{color:'#d50000'}}>\r\n                                            <DeleteIcon />\r\n                                        </IconButton>\r\n\r\n                                    </ListItemSecondaryAction>\r\n\r\n                                </ListItem>\r\n\r\n                            ) )}\r\n\r\n                        </List>\r\n                    </div>\r\n\r\n                    <Button\r\n                        variant=\"text\"\r\n                        color='inherit'\r\n                        style={{ background:'#d50000',width:'100%',color:'white'}}\r\n                        fontsize=\"inherit\"\r\n                        onClick={clearList}\r\n                        startIcon={<ClearAllIcon/>}\r\n                    >\r\n                        Clear All\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n\r\n\r\n            <br/>\r\n\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default ToDoList;\r\n\r\n\r\n//","import React, {Component} from 'react';\n\nimport InputForm from \"./components/InputForm\";\nimport HeaderBar from \"./components/HeaderBar\";\n\nimport ListLayout from \"./components/ListLayout\";\n\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state={\n            items:[],\n            newItem:{\n                id:'',\n                itemText:''\n            },\n            updateItem:false\n        };\n        this.handleInput = this.handleInput.bind(this);\n        this.addItem = this.addItem.bind(this);\n    }\n\nhandleInput = e =>{\n        this.setState({\n            newItem:{\n                id:1 + Math.random(),\n                itemText: e.target.value\n\n            }\n        });\n\n};\n\n    addItem = e => {\n        e.preventDefault();\n        const typedItem = this.state.newItem;\n\n        if (typedItem.itemText !== \"\") {\n            const typedItems = [\n                { ...typedItem, isStriked: false },\n                ...this.state.items\n            ];\n            this.setState({\n                items: typedItems,\n                newItem: {\n                    id: \"\",\n                    itemText: \"\"\n                },\n                updateItem: false\n            });\n        } else {\n        }\n    };\n\n\n    clearList = () =>{\n    this.setState({\n    items:[]\n    })\n};\n\ndeleteItem = id =>{\n    const selectedItem = this.state.items.filter(item =>\n    item.id !==id);\n    this.setState({\n        items:selectedItem\n    });\n};\n\nupdateItem = id =>{\n    const selectedItem = this.state.items.filter(item =>\n        item.id !==id);\n\n    const ItemToBeEdittedId=\n        this.state.items.find(item => item.id ===id);\n\n    this.setState({\n        items:selectedItem,\n        newItem :{\n            itemText:ItemToBeEdittedId.itemText\n        },\n        updateItem:true,\n        id:id\n    })\n};\n\n    handleClick = id => {\n        const selectedItem = this.state.items.find(item => item.id === id);\n        if (selectedItem.isStriked === false)\n            this.setState({\n                items: [\n                    ...this.state.items.filter(item => item.id !== id),\n                    { ...selectedItem, isStriked: true }\n                ]\n            });\n    };\n\n\n\n    render() {\n        return (\n            <div  >\n\n\n                <HeaderBar/>\n\n                <InputForm newItem={this.state.newItem.itemText}\n                           addItem={this.addItem}\n                           handleInput ={this.handleInput}\n                           updateItem={this.state.updateItem}\n\n                         />\n\n                             <ListLayout items={this.state.items}\n                                         clearList={this.clearList}\n                                         deleteItem={this.deleteItem}\n                                         updateItem={this.updateItem}\n                                         handleClick={this.handleClick}\n                                        />\n\n\n            </div>\n\n\n\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}